@using PrismWear.Web.ViewModels.Cart
@model IEnumerable<CartItemViewModel>

@{
    ViewData["Title"] = "Your Cart";
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <h1 class="display-5 fw-bold mb-4">Твоята количка</h1>

            @if (!Model.Any())
            {
                <div class="alert alert-info shadow-sm rounded-3 p-4">
                    <i class="bi bi-cart-x me-2"></i>Твоята количка е празна.
                    <div class="mt-3">
                        <a href="/" class="btn btn-primary">Продължи с пазаруването</a>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow-sm border-0 rounded-3 mb-4">
                    <div class="table-responsive">
                        <table class="table align-middle table-hover mb-0" id="cartTable">
                            <thead class="bg-light">
                                <tr>
                                    <th scope="col" class="ps-4" style="width: 8rem;"></th>
                                    <th scope="col">Продукт</th>
                                    <th scope="col">Размер</th>
                                    <th scope="col" class="text-end">Цена</th>
                                    <th scope="col" class="text-center">Количество</th>
                                    <th scope="col" class="text-end">Субтотал</th>
                                    <th scope="col" class="text-end pe-4"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    var subtotal = item.Price * item.Quantity;
                                    var availableStock = item.Details?.FirstOrDefault(d => d.Size == item.Size)?.Quantity ?? 0;

                                    <tr data-productid="@item.ProductId" data-size="@item.Size">
                                        <td class="ps-4">
                                            <img src="@item.ImageUrl"
                                                 class="img-fluid rounded"
                                                 style="max-width: 80px; max-height: 80px; object-fit: cover;"
                                                 alt="@item.Name" />
                                        </td>
                                        <td>
                                            <h6 class="mb-1">@item.Name</h6>
                                            <span class="badge bg-light text-dark">@item.CategoryName</span>
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@item.Size</span>
                                        </td>
                                        <td class="text-end price" data-price="@item.Price">
                                            <span class="fw-bold">@item.Price.ToString("F2") лв.</span>
                                        </td>
                                        <td class="text-center">
                                            <div class="input-group input-group-sm mx-auto" style="max-width: 6rem;">
                                                <button type="button" class="btn btn-outline-secondary border quantity-btn decrease-btn">
                                                    -
                                                </button>
                                                <input type="number"
                                                       name="quantity"
                                                       value="@item.Quantity"
                                                       min="1"
                                                       class="form-control text-center border quantity-input"
                                                       data-available="@availableStock" />
                                                <button type="button" class="btn btn-outline-secondary border quantity-btn increase-btn"
                                                        data-available="@availableStock">
                                                    +
                                                </button>
                                            </div>
                                        </td>
                                        <td class="text-end subtotal fw-bold">
                                            @subtotal.ToString("F2") лв.
                                        </td>
                                        <td class="text-end pe-4">
                                            <button class="btn btn-sm btn-outline-danger remove-item-btn" data-productid="@item.ProductId">
                                                Delete
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                var total = Model.Sum(i => i.Price * i.Quantity);

                <div class="card shadow-sm border-0 rounded-3 p-4 bg-light">
                    <div class="row">
                        <div class="col-md-6">
                            <a href="/" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-2"></i>Продължи с пазаруването
                            </a>
                        </div>
                        <div class="col-md-6">
                            <div class="text-end">
                                <div class="d-flex justify-content-end align-items-center mb-3">
                                    <h5 class="mb-0 me-3">Total:</h5>
                                    <h3 class="mb-0 text-primary fw-bold">
                                        <span id="cartTotal">@total.ToString("F2")</span> лв.
                                    </h3>
                                </div>
                                <a asp-action="Checkout" asp-controller="Cart" class="btn btn-primary btn-lg">
                                    <i class="bi bi-credit-card me-2"></i>Продължи
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            function updateSubtotalAndTotal(input, quantity) {
                const row = input.closest('tr');
                const price = parseFloat(row.find('.price').data('price')) || 0;
                const newSubtotal = price * quantity;
                row.find('.subtotal').text(newSubtotal.toFixed(2) + ' лв.');

                let total = 0;
                $('#cartTable tbody tr').each(function () {
                    const sub = parseFloat($(this).find('.subtotal').text().replace(' лв.', '')) || 0;
                    total += sub;
                });
                $('#cartTotal').text(total.toFixed(2));
            }

            $('.increase-btn').click(function () {
                const input = $(this).siblings('.quantity-input');
                let val = parseInt(input.val()) || 1;
                const max = parseInt(input.data('available')) || 1;

                if (val < max) {
                    input.val(val + 1).trigger('input');
                }
            });

            $('.decrease-btn').click(function () {
                const input = $(this).siblings('.quantity-input');
                let val = parseInt(input.val()) || 1;

                if (val > 1) {
                    input.val(val - 1).trigger('input');
                }
            });

            $('.quantity-input').on('input', function () {
                const input = $(this);
                const row = input.closest('tr');
                const productId = row.data('productid');
                const size = row.data('size');
                let quantity = parseInt(input.val()) || 1;
                const max = parseInt(input.data('available')) || 1;

                if (quantity < 1) quantity = 1;
                if (quantity > max) quantity = max;

                input.val(quantity);
                updateSubtotalAndTotal(input, quantity);

                $.ajax({
                    type: 'POST',
                    url: '/Cart/UpdateQuantity',
                    data: { productId: productId, size: size, quantity: quantity },
                    success: function (response) {
                        if (response.totalItemCount !== undefined) {
                            $('#cart-badge').text(response.totalItemCount);
                        }
                    },
                    error: function () {
                        alert('Error updating quantity.');
                    }
                });
            });

            $('.remove-item-btn').on('click', function (e) {
                e.preventDefault();
                const btn = $(this);
                const productId = btn.data('productid');
                const row = btn.closest('tr');

                row.addClass('animate__animated animate__fadeOut');

                $.ajax({
                    type: 'POST',
                    url: '/Cart/Remove',
                    data: { productId: productId },
                    success: function (response) {
                        setTimeout(function () {
                            row.remove();

                            let total = 0;
                            $('#cartTable tbody tr').each(function () {
                                const sub = parseFloat($(this).find('.subtotal').text().replace(' лв.', '')) || 0;
                                total += sub;
                            });
                            $('#cartTotal').text(total.toFixed(2));

                            if ($('#cartTable tbody tr').length === 0) {
                                location.reload();
                            }

                            if (response.totalItemCount !== undefined) {
                                $('#cart-badge').text(response.totalItemCount);
                            }
                        }, 300);
                    },
                    error: function () {
                        row.removeClass('animate__fadeOut');
                        alert('Error removing item.');
                    }
                });
            });
        });
    </script>
}
