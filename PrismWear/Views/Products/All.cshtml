@using PrismWear.Web.ViewModels.Products
@model ProductListViewModel

@{
    this.ViewData["Title"] = "All Products";
}

<h1 class="text-center mt-4">@this.ViewData["Title"]</h1>

<div class="container mt-4">
    <div class="card shadow-sm p-3">
        <div class="row g-3 align-items-center">
            <div class="col-md-4">
                <label for="categoryFilter" class="form-label fw-bold">Category:</label>
                <select id="categoryFilter" class="form-select">
                    <option value="0">All Categories</option>
                    @foreach (var category in Model.Products.Select(p => new { p.CategoryId, p.CategoryName }).Distinct())
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label class="form-label fw-bold">Price Range:</label>
                <div class="input-group">
                    <input type="number" id="minPrice" class="form-control" placeholder="Min Price" min="0">
                    <span class="input-group-text">-</span>
                    <input type="number" id="maxPrice" class="form-control" placeholder="Max Price" min="0">
                </div>
            </div>

            <div class="col-md-4 d-grid">
                <button id="applyFilters" class="btn btn-primary">Apply Filters</button>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4" id="product-container">
        @foreach (var product in Model.Products)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <img src="@($"/images/products/{product.Images.FirstOrDefault()?.Id}.{product.Images.FirstOrDefault()?.Extension}")"
                         class="card-img-top img-fluid" 
                         alt="Product Image">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-truncate" title="@product.Name">@product.Name</h5>
                        <p class="card-text">@product.CategoryName</p>
                        <a href="@Url.Action("ById", "Products", new { id = product.Id })" 
                           class="btn btn-primary mt-auto">View Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div>
    <div id="loading" class="text-center mt-3" style="display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Loading products...</p>
    </div>
</div>

<nav class="mt-4">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="All" asp-route-pageNumber="@Model.PreviousPageNumber">Previous</a>
        </li>

        @for (int i = 1; i <= Model.PagesCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-action="All" asp-route-pageNumber="@i">@i</a>
            </li>
        }

        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="All" asp-route-pageNumber="@Model.NextPageNumber">Next</a>
        </li>
    </ul>
</nav>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#applyFilters').click(function () {
                var categoryId = $('#categoryFilter').val();
                var minPrice = $('#minPrice').val();
                var maxPrice = $('#maxPrice').val();

                if (categoryId === "0") {
                    categoryId = null;
                }

                $('#loading').show();

                $.ajax({
                    url: '/Products/Filter',
                    type: 'GET',
                    data: {
                        categoryId: categoryId,
                        minPrice: minPrice || null,
                        maxPrice: maxPrice || null,
                    },
                    success: function (data) {
                        $('#product-container').html(data);
                    },
                    error: function () {
                        alert('Error loading products.');
                    },
                    complete: function () {
                        $('#loading').hide();
                    }
                });
            });
        });
    </script>
}
