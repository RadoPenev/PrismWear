@using PrismWear.Web.ViewModels.Products
@inject PrismWear.Services.Data.ICategoriesService _categoriesService
@model ProductListViewModel

@{
    this.ViewData["Title"] = "All Products";
}

<h1 class="text-center mt-4">@this.ViewData["Title"]</h1>

<div class="container mt-4">
    <div class="card shadow-sm p-3">

        <!-- Use a GET form to capture user-selected filters. -->
        <form asp-controller="Products" asp-action="All" method="get">
            <div class="row g-3 align-items-center">
                <div class="col-md-4">
                    <label asp-for="Filters.CategoryId" class="form-label fw-bold">Category:</label>
                    <select asp-for="Filters.CategoryId" class="form-select">
                        <option value="0">All Categories</option>
                        @foreach (var category in _categoriesService.GetAllAsKeyValuePairs())
                        {
                            <option value="@category.Key">@category.Value</option>
                        }
                    </select>
                </div>

                <div class="col-md-4">
                    <label class="form-label fw-bold">Price Range:</label>
                    <div class="input-group">
                        <input type="number" asp-for="Filters.MinPrice" class="form-control" placeholder="Min Price" min="0">
                        <span class="input-group-text">-</span>
                        <input type="number" asp-for="Filters.MaxPrice" class="form-control" placeholder="Max Price" min="0">
                    </div>
                </div>

                <div class="col-md-4 d-grid">
                    <!-- Submit button that sends the user’s filters in the query string -->
                    <button type="submit" class="btn btn-primary">
                        Apply Filters
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Product List Partial -->
<partial name="_ProductsPartial" model="@Model.Products" />

<!-- (Optional) Loading Spinner -->
<div>
    <div id="loading" class="text-center mt-3" style="display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Loading products...</p>
    </div>
</div>

<!-- Pagination -->
<nav class="mt-4">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               asp-action="All"
               asp-route-pageNumber="@Model.PreviousPageNumber"
               asp-route-Filters.CategoryId="@Model.Filters.CategoryId"
               asp-route-Filters.MinPrice="@Model.Filters.MinPrice"
               asp-route-Filters.MaxPrice="@Model.Filters.MaxPrice">
                Previous
            </a>
        </li>

        @for (int i = 1; i <= Model.PagesCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link"
                   asp-action="All"
                   asp-route-pageNumber="@i"
                   asp-route-Filters.CategoryId="@Model.Filters.CategoryId"
                   asp-route-Filters.MinPrice="@Model.Filters.MinPrice"
                   asp-route-Filters.MaxPrice="@Model.Filters.MaxPrice">
                    @i
                </a>
            </li>
        }

        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               asp-action="All"
               asp-route-pageNumber="@Model.NextPageNumber"
               asp-route-Filters.CategoryId="@Model.Filters.CategoryId"
               asp-route-Filters.MinPrice="@Model.Filters.MinPrice"
               asp-route-Filters.MaxPrice="@Model.Filters.MaxPrice">
                Next
            </a>
        </li>
    </ul>
</nav>
